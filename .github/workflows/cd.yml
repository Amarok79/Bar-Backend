name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ CI ]
    types: [ completed ]
    branches: [ main ]

permissions: {}

concurrency:
  group: production-environment

jobs:

  # --- JOB: bump-version
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: write

    steps:
      - name: Get Sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore Tools
        run: dotnet tool restore
 
      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump Version
        id: versionize
        run: dotnet versionize --changelog-all

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true


  # --- JOB: deploy-to-production-web

  deploy-to-production-web:
    name: Deploy to Production (Web)
    runs-on: windows-latest
    needs: bump-version
    
    steps:
      - name: Get Sources
        uses: actions/checkout@v3

      - name: Get .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore Packages
        run: dotnet restore

      - name: Build Release
        run: dotnet build -c Release

      - name: Publish to Production
        run: dotnet publish -c Release --no-build --no-self-contained /p:PublishProfile=Production.pubxml /p:Password="${{ secrets.DEPLOY_PASSWORD_PRODUCTION }}"


  # --- JOB: deploy-to-production-docker

  deploy-to-production-docker: 
    name: Build and Production (Docker)
    runs-on: ubuntu-latest
    needs: bump-version

    steps:
      - name: Get Sources
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: amarok79/bar-backend:latest

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PVS_HOST }}
          username: ${{ secrets.PVS_SSH_USER }}
          password: ${{ secrets.PVS_SSH_PASSWORD }}
          script: /usr/bin/bash /opt/run-bar-backend.sh
